generator client {
  provider     = "prisma-client"
  output       = "../generated/prisma"
  engineType   = "client"
  moduleFormat = "esm"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                       String    @id
  user_id                  String
  account_id               String
  provider_id              String
  access_token             String?
  refresh_token            String?
  access_token_expires_at  DateTime?
  refresh_token_expires_at DateTime?
  scope                    String?
  id_token                 String?
  password                 String?
  created_at               DateTime  @default(now())
  updated_at               DateTime
  user                     user      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model company {
  id                  String   @id
  name                String
  organization_number String?  @unique
  website             String?
  logo                String?
  description         String?
  industry            String?
  size                String?
  created_at          DateTime @default(now())
  updated_at          DateTime
  job                 job[]

  @@index([name])
  @@index([organization_number])
}

model cv {
  id           String   @id
  user_id      String
  typst_source String?
  pdf_path     String?
  created_at   DateTime @default(now())
  updated_at   DateTime
  user         user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model job {
  id                       String                   @id
  created_at               DateTime                 @default(now())
  updated_at               DateTime
  removed                  Boolean                  @default(false)
  removed_at               DateTime?
  published_at             DateTime
  last_publication_date    DateTime?
  expires_at               DateTime?
  last_checked             DateTime?
  title                    String
  description              String
  url                      String?
  company_id               String?
  employment_type          String?
  working_hours_type       String?
  duration                 String?
  vacancies                Int?
  start_date               DateTime?
  workload_min             Float?
  workload_max             Float?
  salary_min               Float?
  salary_max               Float?
  salary_currency          String?
  salary_period            String?
  salary_type              String?
  salary_description       String?
  occupation               String?
  occupation_group         String?
  occupation_field         String?
  experience_required      Boolean                  @default(false)
  driving_license_required Boolean                  @default(false)
  access_to_own_car        Boolean                  @default(false)
  application_deadline     DateTime?
  application_instructions String?
  application_url          String?
  application_email        String?
  application_reference    String?
  application_via_af       Boolean                  @default(false)
  application_other        String?
  workplace                String?
  remote                   Boolean                  @default(false)
  street_address           String?
  city                     String?
  municipality             String?
  municipality_code        String?
  region                   String?
  region_code              String?
  postal_code              String?
  country                  String                   @default("SE")
  country_code             String?
  location_formatted       String?
  coordinates              Unsupported("geometry")?
  search_text              String?
  relevance_vector         Unsupported("vector")?
  company                  company?                 @relation(fields: [company_id], references: [id])
  job_contact              job_contact[]
  job_requirement          job_requirement[]
  job_source_link          job_source_link[]

  @@index([city])
  @@index([company_id])
  @@index([country])
  @@index([employment_type])
  @@index([municipality])
  @@index([occupation_field])
  @@index([occupation_group])
  @@index([occupation])
  @@index([region])
  @@index([remote])
  @@index([removed, published_at])
}

model job_contact {
  id          String  @id
  job_id      String
  name        String?
  role        String?
  email       String?
  phone       String?
  description String?
  job         job     @relation(fields: [job_id], references: [id], onDelete: Cascade)

  @@index([job_id])
}

model job_requirement {
  id               String @id
  job_id           String
  requirement_type String
  category         String
  label            String
  weight           Int?
  job              job    @relation(fields: [job_id], references: [id], onDelete: Cascade)

  @@index([category])
  @@index([job_id])
  @@index([label])
  @@index([requirement_type])
}

model job_source_link {
  id            String    @id
  job_id        String
  source        JobSource
  source_id     String
  source_url    String?
  discovered_at DateTime  @default(now())
  job           job       @relation(fields: [job_id], references: [id], onDelete: Cascade)

  @@unique([source, source_id])
  @@index([job_id])
}

model session {
  id         String   @id
  user_id    String
  token      String   @unique
  expires_at DateTime
  ip_address String?
  user_agent String?
  created_at DateTime @default(now())
  updated_at DateTime
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model user {
  id             String    @id
  name           String
  email          String    @unique
  email_verified Boolean   @default(false)
  image          String?
  created_at     DateTime  @default(now())
  updated_at     DateTime
  account        account[]
  cv             cv[]
  session        session[]
}

model verification {
  id         String   @id
  identifier String
  value      String
  expires_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime
}

enum JobSource {
  PLATSBANKEN
  LINKEDIN
  INDEED
  STEPSTONE
  GLASSDOOR
}
