enum JobSource {
  PLATSBANKEN
  LINKEDIN
  INDEED
  STEPSTONE
  GLASSDOOR
}

model Job {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  removed             Boolean   @default(false)
  removedAt           DateTime? @map("removed_at")
  publishedAt         DateTime  @map("published_at")
  lastPublicationDate DateTime? @map("last_publication_date")
  expiresAt           DateTime? @map("expires_at")
  lastChecked         DateTime? @map("last_checked")

  title       String
  description String  @db.Text
  url         String?

  companyId String?  @map("company_id")
  company   Company? @relation(fields: [companyId], references: [id])

  employmentType   String? @map("employment_type")
  workingHoursType String? @map("working_hours_type")
  duration         String?

  vacancies   Int?
  startDate   DateTime? @map("start_date")
  workloadMin Float?    @map("workload_min")
  workloadMax Float?    @map("workload_max")

  salaryMin         Float?  @map("salary_min")
  salaryMax         Float?  @map("salary_max")
  salaryCurrency    String? @map("salary_currency")
  salaryPeriod      String? @map("salary_period")
  salaryType        String? @map("salary_type")
  salaryDescription String? @map("salary_description")

  occupation      String? @map("occupation")
  occupationGroup String? @map("occupation_group")
  occupationField String? @map("occupation_field")

  experienceRequired     Boolean @default(false) @map("experience_required")
  drivingLicenseRequired Boolean @default(false) @map("driving_license_required")
  accessToOwnCar         Boolean @default(false) @map("access_to_own_car")

  applicationDeadline     DateTime? @map("application_deadline")
  applicationInstructions String?   @map("application_instructions") @db.Text
  applicationUrl          String?   @map("application_url")
  applicationEmail        String?   @map("application_email")
  applicationReference    String?   @map("application_reference")
  applicationViaAf        Boolean   @default(false) @map("application_via_af")
  applicationOther        String?   @map("application_other")

  workplace         String?
  remote            Boolean                               @default(false)
  streetAddress     String?                               @map("street_address")
  city              String?
  municipality      String?
  municipalityCode  String?                               @map("municipality_code")
  region            String?
  regionCode        String?                               @map("region_code")
  postalCode        String?                               @map("postal_code")
  country           String                                @default("SE")
  countryCode       String?                               @map("country_code")
  locationFormatted String?                               @map("location_formatted")
  coordinates       Unsupported("geometry(Point, 4326)")?

  searchText      String?                      @map("search_text") @db.Text
  relevanceVector Unsupported("vector(1536)")? @map("relevance_vector")

  sources      JobSourceLink[]
  requirements JobRequirement[]
  contacts     JobContact[]

  @@index([removed, publishedAt])
  @@index([companyId])
  @@index([employmentType])
  @@index([remote])
  @@index([city])
  @@index([municipality])
  @@index([region])
  @@index([country])
  @@index([occupation])
  @@index([occupationGroup])
  @@index([occupationField])
  @@map("job")
}

model JobSourceLink {
  id    String @id @default(cuid())
  jobId String @map("job_id")
  job   Job    @relation(fields: [jobId], references: [id], onDelete: Cascade)

  source       JobSource
  sourceId     String    @map("source_id")
  sourceUrl    String?   @map("source_url")
  discoveredAt DateTime  @default(now()) @map("discovered_at")

  @@unique([source, sourceId])
  @@index([jobId])
  @@map("job_source_link")
}

model Company {
  id                 String  @id @default(cuid())
  name               String
  organizationNumber String? @unique @map("organization_number")
  website            String?
  logo               String?
  description        String? @db.Text
  industry           String?
  size               String?

  jobs Job[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([name])
  @@index([organizationNumber])
  @@map("company")
}

model JobRequirement {
  id String @id @default(cuid())

  job   Job    @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId String @map("job_id")

  requirementType String @map("requirement_type")
  category        String

  label  String
  weight Int?

  @@index([jobId])
  @@index([category])
  @@index([requirementType])
  @@index([label])
  @@map("job_requirement")
}

model JobContact {
  id    String @id @default(cuid())
  jobId String @map("job_id")
  job   Job    @relation(fields: [jobId], references: [id], onDelete: Cascade)

  name        String?
  role        String?
  email       String?
  phone       String?
  description String? @db.Text

  @@index([jobId])
  @@map("job_contact")
}
